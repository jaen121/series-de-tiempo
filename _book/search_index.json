[["index.html", "Series de Tiempo Chapter 1 Justificación uso de datos historicos del precio del maíz", " Series de Tiempo Laura Blanco Rios,Jairo Enrique Alba Talero, Cristian Ruiz Londoño 2024-05-11 Chapter 1 Justificación uso de datos historicos del precio del maíz En el curso se va a trabajar con la base de datos del precio del maíz a través de la historia, con el fin de proyectar su precio futuro. La base datos nos muestra el precio desde el 01-01-2000 hasta el 19-04-2024, consta de las siguientes columnas: - Fecha: Fecha de transacción - Ultimo: Ultimo precio del día, precio de cierre - Apertura: Primer precio del día, precio de apertura - Máximo: Máximo precio en la negociación del día - Mínimo: Mínimo precio en la negociación del día - Vol: Volumen negociado en toneladas - % Var: Porcentaje de variación. Es importante predecir el valor del maíz con el fin de anticipar y mitigar los efectos de la inflación por la posible subida del precio del maíz, esto dado que el maíz es un insumo muy importante para el alimento de aves de corral como lo son, gallinas reproductoras, pollos de engorde y gallinas ponedoras, también desempeña un papel fundamental en la producción de alimento balanceado para cerdos. El maíz representa una proporción significativa, que oscila entre el 50 % y el 70 %, de los ingredientes utilizados en la elaboración de alimentos balanceados para aves de corral y cerdos. Es evidente que el precio del maíz ejerce una influencia directa y proporcional en el costo de la carne de pollo, huevo y cerdo, ya que el alimento balanceado representa la mayor parte de los costos en la producción de aves de corral y cerdo. La industria de alimentos balanceados también depende de la predicción del precio del maíz. Las empresas de alimentos balanceados pueden ajustar sus estrategias de aprovisionamiento y producción para reducir el impacto de los cambios en los costos de materias primas al conocer con anticipación las variaciones en el precio del maíz. Esto a su vez ayuda a mantener estables los precios del alimento balanceado para animales, lo que es esencial para garantizar la rentabilidad y sostenibilidad de sus productos. Además, la predicción del precio del maíz puede ayudar a los gobiernos nacionales y regionales a desarrollar políticas y programas efectivos para proteger la seguridad alimentaria. El gobierno se puede anticipar a posibles aumentos de los costos de alimentos básicos y tomar medidas preventivas para disminuir su impacto negativo en el aumento de precios por el aumento de costos en las materias primas observando de cerca las tendencias del precio del maíz Esto puede incluir la implementación de subsidios alimentarios, programas de asistencia alimentaria y políticas para respaldar la producción agrícola nacional. "],["introducción-a-las-series-de-tiempo.html", "Chapter 2 Introducción a las series de tiempo 2.1 Principales campos donde se aplican las series de tiempo 2.2 Principales pasos para llevar a cabo un aálisis de series de tiempo", " Chapter 2 Introducción a las series de tiempo Una serie de tiempo es una secuencia de datos ordenados en función del tiempo. Estos datos se recopilan en intervalos regulares, como horas, días, meses, años, etc. El objetivo principal de analizar una serie de tiempo es descubrir patrones, tendencias y comportamientos que cambian con el tiempo. Las series de tiempo se utilizan en una amplia variedad de campos, como finanzas, economía, meteorología, ciencias sociales y muchas otras áreas donde se registran datos a lo largo del tiempo. Algunos ejemplos comunes de series de tiempo incluyen el precio de las acciones en bolsa a lo largo del tiempo, las ventas mensuales de una empresa, la temperatura diaria registrada en una región, entre otros. El análisis de series de tiempo implica técnicas como el modelado de tendencias, la detección de estacionalidad, la identificación de patrones cíclicos y la predicción de valores futuros. Estas técnicas son útiles para tomar decisiones informadas y predecir el comportamiento futuro basado en datos históricos. 2.1 Principales campos donde se aplican las series de tiempo Las series de tiempo se utilizan en una amplia variedad de situaciones y campos. Algunas de las situaciones más comunes en las que se utilizan las series de tiempo son: Finanzas y economía: En análisis financiero, las series de tiempo se utilizan para estudiar el rendimiento de acciones, bonos, índices bursátiles y otros instrumentos financieros a lo largo del tiempo. También son fundamentales en el análisis económico para estudiar indicadores como el PIB, la inflación, el desempleo y las tasas de interés a lo largo del tiempo. Ciencias naturales: En campos como la meteorología, la climatología y la oceanografía, las series de tiempo se utilizan para analizar patrones climáticos, temperaturas, niveles de precipitación, concentraciones de gases, entre otros datos ambientales a lo largo del tiempo. Ingeniería y tecnología: En ingeniería eléctrica, mecánica y civil, las series de tiempo se utilizan para monitorear el rendimiento de sistemas, predecir fallas, analizar el comportamiento de estructuras y realizar mantenimiento predictivo. Ciencias de la salud: En medicina y epidemiología, las series de tiempo se utilizan para analizar tendencias en la propagación de enfermedades, estudiar la eficacia de tratamientos médicos, analizar datos de pacientes a lo largo del tiempo y realizar proyecciones epidemiológicas. Marketing y ventas: En análisis de mercado, las series de tiempo se utilizan para estudiar tendencias de ventas, patrones estacionales, efectividad de campañas de marketing, demanda de productos y pronósticos de ventas. Investigación social: En sociología, psicología y ciencias sociales en general, las series de tiempo se utilizan para estudiar tendencias sociales, cambios de actitudes, análisis de encuestas a lo largo del tiempo y estudios longitudinales. Por lo tanto las series de tiempo son herramientas poderosas que se utilizan en una amplia gama de disciplinas para analizar patrones, tendencias y cambios a lo largo del tiempo, lo que permite tomar decisiones informadas y realizar pronósticos precisos. 2.2 Principales pasos para llevar a cabo un aálisis de series de tiempo El análisis de series de tiempo se refiere al proceso de analizar los datos disponibles para descubrir el patrón o la tendencia en los datos. Permite extraer y modelar las relaciones entre datos a lo largo del tiempo, sea extrapolando (hacia futuro) o interpolando (hacia el pasado) el comportamiento de datos no observados. En general los análisis de series de tiempo tienen los siguientes tres pasos: Análisis exploratorio Escogencia y ajuste del modelo Diagnóstico "],["importación-de-datos.html", "Chapter 3 Importación de Datos", " Chapter 3 Importación de Datos Los datos a trabajar se obtuvieron de https://es.investing.com/commodities/us-corn-streaming-chart y corresponden al mercado de maiz, durante los años. Se importa la matriz de datos # Importar datos desde un archivo CSV desde github 2.0 ruta_archivo &lt;- &quot;Datos históricos Futuruos maíz EE.UU. 2000-2024 Importar.csv&quot; df_maiz &lt;- read.csv(ruta_archivo, sep = &quot;;&quot;) names(df_maiz) ## [1] &quot;Fecha&quot; &quot;Último&quot; &quot;Apertura&quot; &quot;Máximo&quot; &quot;Mínimo&quot; &quot;Vol.&quot; &quot;X..var.&quot; head(df_maiz) ## Fecha Último Apertura Máximo Mínimo Vol. X..var. ## 1 19/04/2024 433.50 427.10 433.90 426.88 1.58% ## 2 18/04/2024 426.75 429.50 431.00 426.25 180.78K -0.81% ## 3 17/04/2024 430.25 431.00 433.00 429.50 139.24K -0.17% ## 4 16/04/2024 431.00 431.25 432.25 428.50 148.12K -0.12% ## 5 15/04/2024 431.50 434.50 435.00 430.25 152.25K -0.92% ## 6 12/04/2024 435.50 428.25 437.50 427.00 202.05K 1.57% La base datos nos muestra el precio desde el 01-01-2000 hasta el 19-04-2024, consta de las siguientes columnas: - Fecha: Fecha de transacción - Ultimo: Ultimo precio del día, precio de cierre - Apertura: Primer precio del día, precio de apertura - Máximo: Máximo precio en la negociación del día - Mínimo: Mínimo precio en la negociación del día - Vol: Volumen negociado en toneladas - % Var: Porcentaje de variación. "],["análisis-descriptivo-y-filtro-base-de-datos.html", "Chapter 4 Análisis descriptivo y filtro base de datos 4.1 Filtro de datos. 4.2 Analisis Descriptivo", " Chapter 4 Análisis descriptivo y filtro base de datos 4.1 Filtro de datos. Considerando que el foco principal de este ejercicio recae en la variable objetivo último, se opta por construir un nuevo data frame que contenga exclusivamente la fecha y el valor de último. #data frame filtrado df_maiz_filtrado &lt;- df_maiz[, c(&quot;Fecha&quot;, &quot;Último&quot;)] head(df_maiz_filtrado, 5) ## Fecha Último ## 1 19/04/2024 433.50 ## 2 18/04/2024 426.75 ## 3 17/04/2024 430.25 ## 4 16/04/2024 431.00 ## 5 15/04/2024 431.50 4.2 Analisis Descriptivo A continuación se estudiarán los estadísticos descriptivos de la matriz de datos: str(df_maiz_filtrado) ## &#39;data.frame&#39;: 6170 obs. of 2 variables: ## $ Fecha : chr &quot;19/04/2024&quot; &quot;18/04/2024&quot; &quot;17/04/2024&quot; &quot;16/04/2024&quot; ... ## $ Último: num 434 427 430 431 432 ... Teniendo en cuenta que la variable Fecha se encuentra categorizada como caracter y no como fecha, se convierte esta columna a tipo fecha #Convertir fecha en formato fecha df_maiz_filtrado$Fecha &lt;- as.Date(df_maiz_filtrado$Fecha, format = &quot;%d/%m/%Y&quot;) #validar str(df_maiz_filtrado) ## &#39;data.frame&#39;: 6170 obs. of 2 variables: ## $ Fecha : Date, format: &quot;2024-04-19&quot; &quot;2024-04-18&quot; ... ## $ Último: num 434 427 430 431 432 ... #install.packages(&quot;skimr&quot;) skimr::skim(df_maiz_filtrado) Table 4.1: Data summary Name df_maiz_filtrado Number of rows 6170 Number of columns 2 _______________________ Column type frequency: Date 1 numeric 1 ________________________ Group variables None Variable type: Date skim_variable n_missing complete_rate min max median n_unique Fecha 0 1 2000-01-03 2024-04-19 2012-03-08 6170 Variable type: numeric skim_variable n_missing complete_rate mean sd p0 p25 p50 p75 p100 hist Último 0 1 409.31 159.8 182.5 268.25 374.75 509.69 838.75  De la salida anterior podemos visualizar que se presentan 6170 registros, el data frame tiene datos que van desde el 03 de Enero del año 2000 hasta el 19 de abril del año 2024, el precio de cierre del maíz en este periodo de tiempo tiene una media de 409 dolares con una desviación estándar de 159 dolares, el valor mínimo se encuentra en 182,5 dolares y el precio máximo en 838.75 dolares. Ahora, se va analizar el precio de cierre por día de la semana. #Crear una columna que muestre el día de la semana df_maiz_filtrado$Dia_Semana &lt;- weekdays(as.Date(df_maiz_filtrado$Fecha)) head(df_maiz_filtrado, 5) ## Fecha Último Dia_Semana ## 1 2024-04-19 433.50 viernes ## 2 2024-04-18 426.75 jueves ## 3 2024-04-17 430.25 miércoles ## 4 2024-04-16 431.00 martes ## 5 2024-04-15 431.50 lunes #Ordenar la variable Dia_Semana df_maiz_filtrado$Dia_Semana &lt;- factor(df_maiz_filtrado$Dia_Semana, levels = c(&quot;lunes&quot;, &quot;martes&quot;, &quot;miércoles&quot;, &quot;jueves&quot;, &quot;viernes&quot;, &quot;sábado&quot;, &quot;domingo&quot;)) #Cargar libreria para graficar #install.packages(&quot;ggplot2&quot;) library(ggplot2) ## Warning: package &#39;ggplot2&#39; was built under R version 4.2.3 # Crear el gráfico de barras de la frecuencia por día de la semana ggplot(df_maiz_filtrado, aes(x = Dia_Semana, fill = Dia_Semana)) + geom_bar() + #Grafico de barras geom_text( stat = &quot;count&quot;, aes(label = ..count..), vjust = -0.5) + #Agregar etiquetas labs(x = &quot;Día de la semana&quot;, y = &quot;Frecuencia&quot;, title = &quot;Frecuencia por día de la semana&quot;) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) ## Warning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0. ## i Please use `after_stat(count)` instead. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. Dado que los días domingos no se generan transacciones en la bolsa y que los datos que se tienen los días domingos solo son 9 en 24 años de historia se decide eliminar estos datos. #Creando data frame sin el domingo df_maiz_SD &lt;- subset(df_maiz_filtrado, Dia_Semana != &quot;domingo&quot;) #validando filtro unique(df_maiz_SD$Dia_Semana) ## [1] viernes jueves miércoles martes lunes ## Levels: lunes martes miércoles jueves viernes sábado domingo # Crear el gráfico de boxplot por semana ggplot(df_maiz_SD, aes(x = Dia_Semana, y = Último)) + geom_boxplot(fill = &quot;skyblue&quot;, color = &quot;blue&quot;) + labs(x = &quot;Día de la semana&quot;, y = &quot;Último&quot;) "],["series-de-tiempo.html", "Chapter 5 Series de Tiempo 5.1 Aproximación en media móvil 5.2 Componentes de una Serie de Tiempo 5.3 Estacionalidad", " Chapter 5 Series de Tiempo Convertimos la matriz de datos en series de tiempo #install.packages(&quot;xts&quot;) # Carga el paquete xts library(xts) ## Warning: package &#39;xts&#39; was built under R version 4.2.3 ## Loading required package: zoo ## ## Attaching package: &#39;zoo&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## as.Date, as.Date.numeric # Asegúrarse de que la columna &#39;Fecha&#39; esté en formato de fecha #SI SE EJECUTA DE NUEVO SE DEBE VOLVER A CARGAR #df_maiz_filtrado$Fecha &lt;- as.Date(df_maiz_filtrado$Fecha) # Crea una serie de tiempo con la función ts df_maiz_filtradots &lt;- ts(df_maiz_filtrado$Último, start = c(2000, 1), frequency=261.25) #df_maiz_filtradots #revisamos que sea una clase ts class(df_maiz_filtradots) ## [1] &quot;ts&quot; #Corroboramos el inicio de la serie start(df_maiz_filtradots) ## [1] 2000 Graficamos la serie de tiempo por días desde 03 de Enero del año 2000 hasta el 19 de abril del año 2024, excluyendo los fines de semanaaa # Graficar la serie de tiempo usando la función plot plot(df_maiz_filtradots, main = &quot;Serie de Tiempo de Último Precio del Maíz&quot;, xlab = &quot;Fecha&quot;, ylab = &quot;Precio&quot;, type = &quot;l&quot;) 5.1 Aproximación en media móvil Una parte importante del análisis descriptivo de un conjunto de datos son los indicadores de tendencia central, entre ellos, la media. Sin embargo, en el contexto del análisis de series de tiempo, este indicador puede aumentar su sensibilidad, pues la vulnerabilidad de los datos a cambios impredecibles es más alta que en otros conjuntos de datos. Es por eso que se plantea la media móvil, que se define como el promedio de los datos en una ventana de tiempo, es decir, se toma la media de un intervalo de los datos, en vez de la media de los datos en su totalidad. Esto reduce la variabilidad y se puede utilizar para una mejor descripción de estaciones o ventanas de tiempo específicas. A continuación se pueden observar diferentes ejemplo de aproximación de los datos a través de la media móvil con diversos k, en dónde k representa el tamaño del intervalo tomado: # Calcula el promedio móvil k = 10 promedio_movil &lt;- rollmean(df_maiz_filtradots, k = 10, align = &quot;center&quot;, fill = NA) # Gráfico comparativo k = 10 plot(df_maiz_filtradots, type = &quot;l&quot;, col = &quot;black&quot;, lwd = 2, xlab =&quot;Fecha&quot;, ylab =&quot;Precio&quot;, main = &quot;Aproximación en Promedio Móvil con k = 10&quot;) lines(promedio_movil, col = &quot;red&quot;, lwd = 2, lty = 2) legend(&quot;topright&quot;, legend = c(&quot;Serie Original&quot;, &quot;Promedio Móvil&quot;), col = c(&quot;black&quot;, &quot;red&quot;), lty = c(1, 2), lwd = 2) # Calcula el promedio móvil k = 50 promedio_movil &lt;- rollmean(df_maiz_filtradots, k = 50, align = &quot;center&quot;, fill = NA) # Gráfico comparativo k = 50 plot(df_maiz_filtradots, type = &quot;l&quot;, col = &quot;black&quot;, lwd = 2, xlab =&quot;Fecha&quot;, ylab =&quot;Precio&quot;, main = &quot;Aproximación en Promedio Móvil con k = 50&quot;) lines(promedio_movil, col = &quot;red&quot;, lwd = 2, lty = 2) legend(&quot;topright&quot;, legend = c(&quot;Serie Original&quot;, &quot;Promedio Móvil&quot;), col = c(&quot;black&quot;, &quot;red&quot;), lty = c(1, 2), lwd = 2) # Calcula el promedio móvil k = 100 promedio_movil &lt;- rollmean(df_maiz_filtradots, k = 100, align = &quot;center&quot;, fill = NA) # Gráfico comparativo k = 100 plot(df_maiz_filtradots, type = &quot;l&quot;, col = &quot;black&quot;, lwd = 2, xlab =&quot;Fecha&quot;, ylab =&quot;Precio&quot;, main = &quot;Aproximación en Promedio Móvil con k = 100&quot;) lines(promedio_movil, col = &quot;red&quot;, lwd = 2, lty = 2) legend(&quot;topright&quot;, legend = c(&quot;Serie Original&quot;, &quot;Promedio Móvil&quot;), col = c(&quot;black&quot;, &quot;red&quot;), lty = c(1, 2), lwd = 2) # Calcula el promedio móvil k = 500 promedio_movil &lt;- rollmean(df_maiz_filtradots, k = 500, align = &quot;center&quot;, fill = NA) # Gráfico comparativo k = 500 plot(df_maiz_filtradots, type = &quot;l&quot;, col = &quot;black&quot;, lwd = 2, xlab =&quot;Fecha&quot;, ylab =&quot;Precio&quot;, main = &quot;Aproximación en Promedio Móvil con k = 500&quot;) lines(promedio_movil, col = &quot;red&quot;, lwd = 2, lty = 2) legend(&quot;topright&quot;, legend = c(&quot;Serie Original&quot;, &quot;Promedio Móvil&quot;), col = c(&quot;black&quot;, &quot;red&quot;), lty = c(1, 2), lwd = 2) 5.2 Componentes de una Serie de Tiempo Las series de tiempo pueden descomponerse en varias componentes que ayudan a comprender la estructura y los patrones presentes en los datos a lo largo del tiempo. Las principales componentes de una serie de tiempo son: Tendencia: Representa la dirección general de los datos a largo plazo. Puede ser ascendente, descendente o plana. La tendencia captura cambios graduales y persistentes en los datos a lo largo del tiempo. Estacionalidad: Se refiere a patrones recurrentes o cíclicos que se repiten en la serie de tiempo a intervalos fijos de tiempo, como diarios, semanales, mensuales o anuales. La estacionalidad puede ser causada por factores como la temporada, eventos naturales o económicos. Ciclo: Es similar a la estacionalidad, pero con una duración más larga y menos regular. Los ciclos representan fluctuaciones económicas o patrones de negocios que se repiten en períodos de varios años. Variación aleatoria o ruido: Es la parte no sistemática o irregular de la serie de tiempo que no puede explicarse por la tendencia, la estacionalidad o el ciclo. La variación aleatoria puede deberse a factores aleatorios o eventos impredecibles que afectan los datos. 5.3 Estacionalidad #install.packages(&quot;aTSA&quot;) library(aTSA) ## Warning: package &#39;aTSA&#39; was built under R version 4.2.3 ## ## Attaching package: &#39;aTSA&#39; ## The following object is masked from &#39;package:graphics&#39;: ## ## identify library(aTSA) adf.test(df_maiz_filtradots) ## Augmented Dickey-Fuller Test ## alternative: stationary ## ## Type 1: no drift no trend ## lag ADF p.value ## [1,] 0 -0.998 0.322 ## [2,] 1 -0.999 0.322 ## [3,] 2 -0.988 0.326 ## [4,] 3 -1.005 0.320 ## [5,] 4 -0.999 0.322 ## [6,] 5 -1.001 0.321 ## [7,] 6 -0.998 0.322 ## [8,] 7 -1.017 0.315 ## [9,] 8 -1.014 0.317 ## [10,] 9 -1.018 0.315 ## Type 2: with drift no trend ## lag ADF p.value ## [1,] 0 -1.87 0.381 ## [2,] 1 -1.91 0.362 ## [3,] 2 -1.84 0.391 ## [4,] 3 -1.91 0.362 ## [5,] 4 -1.88 0.374 ## [6,] 5 -1.87 0.380 ## [7,] 6 -1.90 0.367 ## [8,] 7 -1.95 0.349 ## [9,] 8 -1.95 0.346 ## [10,] 9 -1.94 0.351 ## Type 3: with drift and trend ## lag ADF p.value ## [1,] 0 -2.58 0.332 ## [2,] 1 -2.64 0.305 ## [3,] 2 -2.56 0.341 ## [4,] 3 -2.64 0.308 ## [5,] 4 -2.60 0.322 ## [6,] 5 -2.58 0.331 ## [7,] 6 -2.63 0.311 ## [8,] 7 -2.67 0.294 ## [9,] 8 -2.68 0.289 ## [10,] 9 -2.66 0.297 ## ---- ## Note: in fact, p.value = 0.01 means p.value &lt;= 0.01 # Calcular la función de autocorrelación acf_result &lt;- acf(df_maiz_filtradots, plot = FALSE) # Trazar la función de autocorrelación plot(acf_result, main = &quot;Función de Autocorrelación&quot;) Trazada ya la serie df_maiz_filtradot, se puede determinar que no presenta una tendencia ascendente o descendente por lo tanto la serie parece ser estacionaria en media. Aplicando la prueba de Dickey-Fuller donde la hipótesis nula de aumentada es que la serie de tiempo tiene una raíz unitaria, lo que significa que no es estacionaria y la hipótesis alternativa es que la serie de tiempo es estacionaria. La prueba arroja un p valor de 0.01 evidenciando que la serie es estacionaria. # Calcular la descomposición estacional descomposicion &lt;- stl(df_maiz_filtradots, s.window = &quot;periodic&quot;) # Trazar la descomposición plot(descomposicion, col = &quot;blue&quot;) La gráfica generada por la función stl muestra la descomposición estacional de una serie de tiempo en tres componentes principales: tendencia, estacionalidad y residuos. Estacionalidad: La parte intermedia de la gráfica muestra la estacionalidad de la serie de tiempo. Esto representa patrones recurrentes o cíclicos que se repiten a intervalos regulares. Por ejemplo, si la serie de tiempo representa datos mensuales, la estacionalidad mostrará patrones que se repiten cada año. Tendencia: La línea suavizada en la parte superior de la gráfica representa la tendencia de la serie de tiempo. La tendencia muestra la dirección general en la que los datos están cambiando a lo largo del tiempo. Una tendencia ascendente indica un crecimiento en los datos, una tendencia descendente indica una disminución, y una tendencia plana sugiere estabilidad. Residuos: La parte inferior de la gráfica muestra los residuos, que son las fluctuaciones aleatorias o irregulares que no pueden ser explicadas por la tendencia o la estacionalidad. Los residuos representan la variación aleatoria en los datos que queda después de eliminar la tendencia y la estacionalidad. Estoy realizando una prueba de que los cambios que realice si se actualicen en la nube v2, prueba Cristian Cambios 2, prueba Jairo ohhh Texto ejemplo a ver si sirve, prueba Laura "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
